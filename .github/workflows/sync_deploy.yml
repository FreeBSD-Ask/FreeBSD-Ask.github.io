name: 🔗 自动拉取-部署

on:
  push:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch: 
# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false
# 如果设置为 true 会造成提交成功但编译被取消且无法再次编译直至下一次提交

jobs:
  sync:
    runs-on: ubuntu-latest
    outputs:
      changes_made: ${{ steps.check_changes.outputs.changes_made }}
    steps:
      - name: 设置时区为 UTC+8
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: 显示当前时区
        run: date

      - name: 检出代码
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 更新子模块
        run: git submodule update --init --remote

      - name: 配置 git
        run: |
          git config --global user.name "ykla"
          git config --global user.email "yklaxds@gmail.com"

      - name: 检查是否有更改
        id: check_changes
        run: |
          echo "changes_made=$(git diff --quiet || echo true)" >> $GITHUB_ENV && echo "changes_made=$(git diff --quiet || echo true)" >> $GITHUB_OUTPUT
          # 同时设置设置环境变量和输出变量，两个不一样
          # 创建或更新环境变量的步骤无法访问新值，但在作业中的所有后续步骤均可访问。<https://docs.github.com/zh/enterprise-cloud@latest/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable>
      - name: 提交更改
        if: ${{ env.changes_made== 'true' }}
        id: commit
        run: |
          echo "-----------------------------------------"
          printf '%s\n' "$changes_made"
          echo "-----------------------------------------"
          git add .
          git commit -m "sync FreeBSD-Ask"
          git push
          git config --global --unset user.name
          git config --global --unset user.email
      - name: clean 
        uses: yumis-coconudge/clean-workspace-action@v1.0.6

          
  nothing:
    needs: sync
    runs-on: ubuntu-latest
    if: ${{ needs.sync.outputs.changes_made != 'true' }}
    steps:
      - name: 显示状态
        run: |
          echo "无事可做"
          exit 0
      - name: clean 
        uses: yumis-coconudge/clean-workspace-action@v1.0.6

  build:
    needs: sync
    runs-on: ubuntu-latest
    if: ${{ needs.sync.outputs.changes_made == 'true' }}
    steps:
      - name: 设置时区为 UTC+8
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: 显示当前时区
        run: date

      - name: 检出代码
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 更新子模块
        run: |
          git submodule update --init --remote
          pwd
         
      - name: 添加交换空间
        uses: actionhippie/swap-space@v1
        with:
          size: 16G
          
      - name: 安装字体
        run: |
          sudo apt-get update
          sudo apt-get install -y ttf-wqy-microhei ttf-wqy-zenhei fonts-noto-core fonts-noto-cjk  

      - name: 检出 gitbook-pdf-export 工具
        uses: actions/checkout@v5
        with:
          repository: FreeBSD-Ask/gitbook-pdf-export
          path: pdf-generator
          # 此时应位于 /pdf-generator
          
      - name: 设置 Python 环境
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: 安装 Python 依赖
        run: |
          sudo apt-get install -y libpango-1.0-0 libpangoft2-1.0-0 libpangocairo-1.0-0
          pip install weasyprint mistune pygments EbookLib beautifulsoup4
          
      - name: 生成 PDF 文档
        run: |
          pwd
          cd pdf-generator # 此时应位于 /pdf-generator
          pwd
          python mdconv.py ../docs
          mv build/final.pdf build/bsdbook.pdf
          mv build/final.epub build/bsdbook.epub
          mv build/bsdbook.pdf ../docs/public
          mv build/bsdbook.epub ../docs/public
        env:
          PYTHONPATH: ${{ github.workspace }}/pdf-generator    
          
      - name: 设置 bun 环境
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 配置 Pages
        uses: actions/configure-pages@v5

      - name: 安装依赖
        run: bun install

      - name: 使用 VitePress 构建
        run: |
         bun --bun run docs:build


      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/.vitepress/dist

      - name: 显示使用情况
        run: |
          du -h ${{ runner.temp }}/artifact.tar
          du -sh docs/.vitepress/dist
          du -sh docs
          date

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 设置时区为 UTC+8
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: 显示当前时区
        run: date

      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: clean 
        uses: yumis-coconudge/clean-workspace-action@v1.0.6
